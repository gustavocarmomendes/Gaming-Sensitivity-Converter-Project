/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Conversor;

import javax.swing.JOptionPane;

/**
 *
 * @author Gustavo Mendes
 */
public class ConversorOficial extends javax.swing.JDialog {

    /**
     * Creates new form ConversorOficial
     */
    public ConversorOficial(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxJogoPadrao = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxJogoFinal = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDPI = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldSensibilidade = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabelResultado = new javax.swing.JLabel();
        jButtonZerar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonCalcular = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Conversor de Sensibilidade");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204), 4), "Conversor de Sensibilidade", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("De:");

        jComboBoxJogoPadrao.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxJogoPadrao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Selecione um Jogo ---", "VALORANT", "CSGO", "TEAM FORTRESS", "MINECRAFT" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Para:");

        jComboBoxJogoFinal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxJogoFinal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Selecione um Jogo ---", "VALORANT", "CSGO", "TEAM FORTRESS", "MINECRAFT" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Digite sua DPI:");

        jTextFieldDPI.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Digite sua Sensibilidade:");

        jTextFieldSensibilidade.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Resultado:");

        jLabelResultado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelResultado.setForeground(new java.awt.Color(0, 0, 204));
        jLabelResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButtonZerar.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButtonZerar.setForeground(new java.awt.Color(0, 0, 204));
        jButtonZerar.setText("ZERAR");
        jButtonZerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZerarActionPerformed(evt);
            }
        });

        jButtonSair.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButtonSair.setForeground(new java.awt.Color(0, 0, 204));
        jButtonSair.setText("SAIR");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jButtonCalcular.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButtonCalcular.setForeground(new java.awt.Color(0, 0, 204));
        jButtonCalcular.setText("Calcular");
        jButtonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("Desenvolvido por Gustavo do Carmo Mendes");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("GitHub: gustavocarmomendes");

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Gustavo Mendes\\Documents\\NetBeansProjects\\ConversorDeSensibilidade\\src\\main\\java\\imagens\\Gnome-Accessories-Calculator-32.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxJogoFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDPI))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxJogoPadrao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSensibilidade))
                            .addComponent(jButtonCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(7, 7, 7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonZerar, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(175, 175, 175))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxJogoPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxJogoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldSensibilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonZerar)
                            .addComponent(jButtonSair))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(20, 20, 20))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonZerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZerarActionPerformed
        Limpar(); // Chamando o método Público Limpar
    }//GEN-LAST:event_jButtonZerarActionPerformed

    private void jButtonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularActionPerformed
       
        try {
            String strJogoPrimario = jComboBoxJogoPadrao.getSelectedItem().toString(); // Pegando informação do primeiro ComboBox
            String strJogoSecundario = jComboBoxJogoFinal.getSelectedItem().toString(); // Pegando informação do segundo ComboBox

            String strDpi = jTextFieldDPI.getText(); // Pegando informação do TextField de DPI
            String strSensibilidade = jTextFieldSensibilidade.getText(); // Pegando informação do TextField de Sensibilidade

            if (strJogoPrimario == "--- Selecione um Jogo ---" || strJogoSecundario == "--- Selecione um Jogo ---") { // Vendo se o usuário selecionou alguma informação
                JOptionPane.showMessageDialog(null, "ERRO AO EXECUTAR, POR FAVOR SELECIONAR OS JOGOS!!");

            } else if (strJogoPrimario == strJogoSecundario) { // Comparando para ver se foi selecionado dois jogos iguais
                JOptionPane.showMessageDialog(null, "ERRO AO EXECUTAR, POR FAVOR SELECIONE DOIS JOGOS DISTINTOS!!");

            } else if (strDpi.equals("") || strSensibilidade.equals("")) { // Analisando se todas as informações foram digitadas
                JOptionPane.showMessageDialog(null, "ERRO AO EXECUTAR, POR FAVOR INSIRA AS INFORMAÇÕES NECESSÁRIAS!!");

            } else {
                strDpi = strDpi.replace(",", ".");                        // Transformando o número que o
                strSensibilidade = strSensibilidade.replace(",", ".");    // usuário digitou com vírgula para ponto.

                Double dblDpi = Double.parseDouble(strDpi);                          // Fazendo um cast
                Double dblSensibilidade = Double.parseDouble(strSensibilidade);      // das informações

                String strResultado;

                if (strJogoPrimario.equals("VALORANT")) { // Vendo qual foi o principal jogo que o usuário selecionou

                    switch (strJogoSecundario) { // Pegando informação do jogo no qual o usuário quer fazer a conversão
                        case "CSGO":
                            strResultado = String.valueOf(dblSensibilidade * 3.14); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no CSGO será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "TEAM FORTRESS":
                            strResultado = String.valueOf(dblSensibilidade / 1.75); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no TEAM FORTRESS será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "MINECRAFT":
                            strResultado = String.valueOf(dblSensibilidade + 1.2); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no MINECRAFT será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;
                    }

                } else if (strJogoPrimario.equals("CSGO")) { // Vendo qual foi o principal jogo que o usuário selecionou

                    switch (strJogoSecundario) { // Pegando informação do jogo no qual o usuário quer fazer a conversão
                        case "VALORANT":
                            strResultado = String.valueOf(dblSensibilidade / 3.18); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no VALORANT será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "TEAM FORTRESS":
                            strResultado = String.valueOf(dblSensibilidade * 1.75); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no TEAM FORTRESS será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "MINECRAFT":
                            strResultado = String.valueOf(dblSensibilidade / 2.5); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no MINECRAFT será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;
                    }

                } else if (strJogoPrimario.equals("TEAM FORTRESS")) { // Vendo qual foi o principal jogo que o usuário selecionou

                    switch (strJogoSecundario) { // Pegando informação do jogo no qual o usuário quer fazer a conversão
                        case "VALORANT":
                            strResultado = String.valueOf(dblSensibilidade / 3.18); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no VALORANT será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "CSGO":
                            strResultado = String.valueOf(dblSensibilidade + 1.89); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no CSGO será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "MINECRAFT":
                            strResultado = String.valueOf(dblSensibilidade * 1.7); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no MINECRAFT será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;
                    }

                } else if (strJogoPrimario.equals("MINECRAFT")) { // Vendo qual foi o principal jogo que o usuário selecionou

                    switch (strJogoSecundario) { // Pegando informação do jogo no qual o usuário quer fazer a conversão
                        case "VALORANT":
                            strResultado = String.valueOf(dblSensibilidade * 1.47); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no VALORANT será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "CSGO":
                            strResultado = String.valueOf(dblSensibilidade * 1.6); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no CSGO será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;

                        case "TEAM FORTRESS":
                            strResultado = String.valueOf(dblSensibilidade / 1.35); // Fazendo o cálculo e a conversão do resultado para String
                            strResultado = strResultado.replace(".", ","); // Transformando o número do resultado, colocando uma vírgula no lugar do ponto
                            jLabelResultado.setText("Sua sensibilidade no TEAM FORTRESS será de: " + strResultado); // Mostrando ao usuário o resultado da conversão
                            break;
                    }

                }

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, insira um número!");
            Limpar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no código fonte!");
            Limpar();
        }
       
    }//GEN-LAST:event_jButtonCalcularActionPerformed

    public void Limpar() { // Método responsável por fazer a limpeza das informações e deixar pronto para o usuário fazer outra conversão (opcional)
        jComboBoxJogoPadrao.setSelectedIndex(0);
        jComboBoxJogoFinal.setSelectedIndex(0);
        jTextFieldDPI.setText("");
        jTextFieldSensibilidade.setText("");
        jLabelResultado.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorOficial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorOficial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorOficial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorOficial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConversorOficial dialog = new ConversorOficial(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcular;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonZerar;
    private javax.swing.JComboBox<String> jComboBoxJogoFinal;
    private javax.swing.JComboBox<String> jComboBoxJogoPadrao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelResultado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextFieldDPI;
    private javax.swing.JTextField jTextFieldSensibilidade;
    // End of variables declaration//GEN-END:variables
}
